[{"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\index.js":"1","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\App.js":"2","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Header.js":"3","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Nav.js":"4","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\FetchContent.js":"5","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Measures.js":"6","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\MoreInfo.js":"7","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\CoutryData.js":"8","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Spinner.js":"9"},{"size":198,"mtime":1609364871264,"results":"10","hashOfConfig":"11"},{"size":811,"mtime":1609449212256,"results":"12","hashOfConfig":"11"},{"size":360,"mtime":1609427765916,"results":"13","hashOfConfig":"11"},{"size":635,"mtime":1609423152824,"results":"14","hashOfConfig":"11"},{"size":2750,"mtime":1609500827746,"results":"15","hashOfConfig":"11"},{"size":1662,"mtime":1609429589619,"results":"16","hashOfConfig":"11"},{"size":3028,"mtime":1609439324015,"results":"17","hashOfConfig":"11"},{"size":4176,"mtime":1609449095623,"results":"18","hashOfConfig":"11"},{"size":245,"mtime":1609448888716,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1w2qm8n",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\index.js",[],["41","42"],"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\App.js",[],"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Header.js",[],"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Nav.js",[],"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\FetchContent.js",["43","44"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link , BrowserRouter as Router } from 'react-router-dom';\r\nimport Spinner from \"./Spinner\";\r\n\r\n\r\nclass FetchContent extends Component {\r\n\r\n    state = {\r\n        data : []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://disease.sh/v3/covid-19/countries?yesterday=true&twoDaysAgo=true\")\r\n          .then((res) => {\r\n              this.setState({\r\n                  data : res.data\r\n              });\r\n          }).catch(err => {\r\n              throw Error(\"The request failed\");\r\n          })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const styleLik = {\r\n            fontWeight: \"600\" , \r\n            color: \"currentcolor\"       \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                { this.state.data.length > 1 ? (\r\n                <div>\r\n             <table>\r\n                     <thead>\r\n                         <tr>\r\n                         <th className=\"one\">country</th>\r\n                         <th>cases</th>\r\n                         <th>todayCases</th>\r\n                         <th>deaths</th>\r\n                         <th>todayDeaths</th>\r\n                         <th>recovered</th>\r\n                         <th>todayRecovered</th>\r\n                         <th>active</th>\r\n                         <th>casesPerOneMillion</th>\r\n                         <th>deathsPerOneMillion</th>\r\n                         <th>tests</th>\r\n                         <th>population</th>\r\n                         </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                { this.state.data.map((el) => ( //Lao People's Democratic Republic\r\n                      <tr key={ el.country }>\r\n                          <td><Link style={styleLik} to={`/more/${el.country}`}>{el.country == \"Lao People's Democratic Republic\" ? el.country.substring(0 , 23) : el.country }</Link></td>\r\n                          <td>{el.cases}</td>\r\n                          <td>{el.todayCases}</td>\r\n                          <td>{el.deaths}</td>\r\n                          <td>{el.todayDeaths}</td>\r\n                          <td>{el.recovered}</td>\r\n                          <td>{el.todayRecovered}</td>\r\n                          <td>{el.active}</td>\r\n                          <td>{el.casesPerOneMillion}</td>\r\n                          <td>{el.deathsPerOneMillion}</td>\r\n                          <td>{el.tests}</td>\r\n                          <td>{el.population}</td>\r\n                      </tr>\r\n                      )) }\r\n                   </tbody>\r\n                </table>\r\n            </div>\r\n            ) : (\r\n                <Spinner />\r\n            )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FetchContent","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Measures.js",[],"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\MoreInfo.js",[],"C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\CoutryData.js",["45","46","47"],"import React, { Component } from 'react';\r\nimport chemistry from \"../svgs/chemistry.svg\";\r\nimport calendar from \"../svgs/calendar.svg\";\r\nimport death from \"../svgs/death.svg\";\r\nimport overpopulation from \"../svgs/overpopulation.svg\";\r\nimport recovered from \"../svgs/recovered.svg\";\r\nimport safetysuit from \"../svgs/safetysuit.svg\";\r\nimport fever from \"../svgs/fever.svg\";\r\nimport patient from \"../svgs/patient.svg\";\r\nimport continent from \"../svgs/continent.svg\";\r\nimport deathTwo from \"../svgs/deathTwo.svg\";\r\n\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class CoutryData extends Component {\r\n\r\n    state = {\r\n        coutryName : this.props.match.params.id,\r\n        data : []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://disease.sh/v3/covid-19/countries/${this.state.coutryName}?strict=true`)\r\n          .then((res) => {\r\n              this.setState({\r\n                  data : res.data\r\n              })\r\n          })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        if ( Object.entries(this.state.data).length > 0 ) {\r\n            console.log(this.state.data.countryInfo.flag );\r\n        }\r\n\r\n        return (\r\n            <div className=\"country-details\">\r\n               { Object.entries(this.state.data).length > 0 ? (\r\n                  <>\r\n                  <div className=\"top-img\">\r\n                      <h5> <img src={ this.state.data.countryInfo.flag  } alt=\"flag\" /></h5>\r\n                      <h3>&lt;{ this.state.data.country } /&gt;</h3>\r\n                  </div>\r\n                  <div className=\"cards\">\r\n                      <div>\r\n                          <p>Cases</p>\r\n                          <h4>{ this.state.data.cases }</h4>\r\n                          <p><img src={fever} alt=\"cases\" /> </p>\r\n                      </div>\r\n                      <div>\r\n                          <p>Deaths</p>\r\n                          <h4>{ this.state.data.deaths }</h4>\r\n                          <p><img src={death} alt=\"cases image\" /></p>\r\n                      </div>\r\n                      <div>\r\n                          <p>today Cases</p>\r\n                          <h4>{ this.state.data.todayCases }</h4>\r\n                          <p><img src={calendar} alt=\"cases image\" /></p>\r\n                      </div>\r\n                      <div>\r\n                          <p>today Deaths</p>\r\n                          <h4>{ this.state.data.todayDeaths }</h4>\r\n                          <p><img src={deathTwo} alt=\"tody death\"  /></p>\r\n                      </div> \r\n                      <div>\r\n                          <p>recovered</p>\r\n                          <h4>{ this.state.data.recovered }</h4>\r\n                          <p><img src={safetysuit} alt=\"safetysuit\" /> </p>\r\n                      </div>\r\n                      <div>\r\n                          <p>today Recovered</p>\r\n                          <h4>{ this.state.data.todayRecovered }</h4>\r\n                          <p><img src={recovered} alt=\"Recoverd\" /> </p>\r\n                      </div>\r\n                      <div>\r\n                          <p>active</p>\r\n                          <h4>{ this.state.data.active }</h4>\r\n                          <p><img src={patient} alt=\"Active pic\" /> </p>\r\n                      </div>\r\n                      <div>\r\n                          <p>tests</p>\r\n                          <h4>{ this.state.data.tests }</h4>\r\n                          <p><img src={chemistry} alt=\"tests image\" /></p>\r\n                      </div>\r\n                      <div>\r\n                          <p>population</p>\r\n                          <h4>{ this.state.data.population }</h4>\r\n                          <p><img src={overpopulation} alt=\"overpopulation\" /> </p>\r\n                      </div>\r\n                      <div>\r\n                          <p>continent</p>\r\n                          <h4>{ this.state.data.continent }</h4>\r\n                          <p><img src={continent} alt=\"continent\" /> </p>\r\n                      </div>\r\n                  </div>\r\n                  </>\r\n               ) : (\r\n                  <Spinner />\r\n               )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Abdelmalek\\Desktop\\web dev\\react js toturials\\coronavirus\\src\\components\\Spinner.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":34,"nodeType":"54","messageId":"55","endLine":3,"endColumn":40},{"ruleId":"56","severity":1,"message":"57","line":56,"column":93,"nodeType":"58","messageId":"59","endLine":56,"endColumn":95},{"ruleId":"60","severity":1,"message":"61","line":58,"column":30,"nodeType":"62","endLine":58,"endColumn":67},{"ruleId":"60","severity":1,"message":"61","line":63,"column":30,"nodeType":"62","endLine":63,"endColumn":70},{"ruleId":"60","severity":1,"message":"61","line":88,"column":30,"nodeType":"62","endLine":88,"endColumn":71},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]